"""Map columns

Revision ID: 742fafaef582
Revises: 07100eaf9234
Create Date: 2025-01-14 02:42:22.692404

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector  # Import the pgvector module

# revision identifiers, used by Alembic.
revision: str = '742fafaef582'
down_revision: Union[str, None] = '07100eaf9234'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('langchain_pg_collection', 'name',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('langchain_pg_collection', 'cmetadata',
                    existing_type=postgresql.JSON(astext_type=sa.Text()),
                    type_=postgresql.JSONB(astext_type=sa.Text()),
                    nullable=False)
    op.alter_column('langchain_pg_embedding', 'embedding',
                    existing_type=pgvector.sqlalchemy.vector.VECTOR(),
                    nullable=False)
    op.alter_column('langchain_pg_embedding', 'document',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.alter_column('langchain_pg_embedding', 'cmetadata',
                    existing_type=postgresql.JSONB(astext_type=sa.Text()),
                    nullable=False)
    op.alter_column('langchain_pg_embedding', 'custom_id',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.add_column('users', sa.Column('uuid', sa.Uuid(), nullable=True))
    op.alter_column('users', 'hashed_password',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=False)
    op.drop_column('users', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.VARCHAR(),
                  autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.alter_column('users', 'hashed_password',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.drop_column('users', 'uuid')
    op.alter_column('langchain_pg_embedding', 'custom_id',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('langchain_pg_embedding', 'cmetadata',
                    existing_type=postgresql.JSONB(astext_type=sa.Text()),
                    nullable=True)
    op.alter_column('langchain_pg_embedding', 'document',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    op.alter_column('langchain_pg_embedding', 'embedding',
                    existing_type=pgvector.sqlalchemy.vector.VECTOR(),
                    nullable=True)
    op.alter_column('langchain_pg_collection', 'cmetadata',
                    existing_type=postgresql.JSONB(astext_type=sa.Text()),
                    type_=postgresql.JSON(astext_type=sa.Text()),
                    nullable=True)
    op.alter_column('langchain_pg_collection', 'name',
                    existing_type=sa.VARCHAR(),
                    nullable=True)
    # ### end Alembic commands ###
